           Тернарный Оператор - этот оператор в отличии от унарного и бинарного,работает с тремя значениями.

   Полный формат выглядит вот так:
                                 
                                     (если условие ===true)(если условие ===false)
                                        условие?результат1:результат2
                                                  if         else
    В зависимости от условий тернарного оператора,мы либо значения после знака вопроса,либо после двоеточия.

   > 5>5?1:0;         > let a=5>0?1:-1;  если это писать через IF:   if(5>0)
   < 0                < undefined                                      let a=1;
   > 5>4?1:0;         >a;                                            else
   < 1                <1                                               let a=-1;

   Чтобы заставлять тернарного оператора выполняться отдельно,нужно заключить его в скобки:
       a = 1 + 1 + (4 > 5 ? 1 : 2 );
     Первый приоритет = false (так как 4 > 5 неверно) => из этого false возвращается в оператор,и получается 2
                                                                            => a = 1 + 1 + 2;
                                                                               a = 4;
    То же самое можно делать со строками:
   > let clickLike = true;
   < undefined
   > let message = 'Bro' + (clickLike ? 'Pro': 'Asshole');
   < undefined
   > message;
   < "Bro Pro"

  Выражения после знаков ? и : не обязаны быть конкретными значениями - там можно указывать переменные и выражения.

  У этого оператора нет аналога ELSE IF,но это не мешает ему так сделать самому.Для этого надо после : вложить ещё один тернарный оператор,тем самым сделав аналог вложенного условия,и не забываем про скобки:

 ПРИМЕР:
  > a = a ===1 ? a : (a ===2 ? 100 : 200);
  <200 
  >a;
  <200  
      ||
      \/
  a = 3;
  a = 3===1 ? a :(a ===2 ? 100 : 200);
      ||
      \/
  a = 3;
  a = a===2 ? 100 : 200;
     ||
     \/
  a = 3;
  a = 200;